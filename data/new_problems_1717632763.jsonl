{"task_id": "test/1", "prompt": "def return_sum(a, b):\n    return a + b\n", "canonical_solution": "    return a + b", "test": "def check(candidate):\n    assert candidate(3, 4) == 7\n    assert candidate(-1, 5) == 4\n    assert candidate(0, 0) == 0\n    assert candidate(100, -100) == 0\n    assert candidate(2.5, 2.5) == 5.0", "entry_point": "return_sum"}
{"task_id": "test/2", "prompt": "def absolute_value(num):\n    return abs(num)\n", "canonical_solution": "    return abs(num)", "test": "def check(candidate):\n    assert candidate(-5) == 5\n    assert candidate(0) == 0\n    assert candidate(10) == 10\n    assert candidate(-10) == 10\n    assert candidate(6.2) == 6.2", "entry_point": "absolute_value"}
{"task_id": "test/3", "prompt": "def area_of_circle(radius):\n    # Write a function to calculate the area of a circle\n", "canonical_solution": "    return 3.14159 * radius * radius", "test": "def check(candidate):\n    assert round(candidate(3), 2) == 28.27\n    assert round(candidate(5), 2) == 78.54\n    assert round(candidate(0), 2) == 0.00\n    assert round(candidate(1.5), 2) == 7.07\n    assert round(candidate(10), 2) == 314.16", "entry_point": "area_of_circle"}
{"task_id": "test/4", "prompt": "def maximum(a, b):\n    # Write a function to return the maximum of two numbers\n", "canonical_solution": "    return max(a, b)", "test": "def check(candidate):\n    assert candidate(3, 4) == 4\n    assert candidate(-1, 5) == 5\n    assert candidate(5, 5) == 5\n    assert candidate(100, -100) == 100\n    assert candidate(2.5, 2.5) == 2.5", "entry_point": "maximum"}
