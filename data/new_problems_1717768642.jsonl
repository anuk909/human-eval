{"task_id": "hard/1", "prompt": "def max_consecutive_sum(nums, k):\n    \"\"\"\n    Write a function that takes a list of integers and a positive integer k, and returns the maximum sum of k consecutive elements in the list.\n\n    For example, if the input list is [1, 2, 3, 4, 5] and k is 2, the output should be 9 because the maximum sum of 2 consecutive elements in the list is 4 + 5 = 9.\n\n    Note:\n    - If the input list is empty or if k is greater than the length of the list, return 0.\n    \"\"\"\n", "canonical_solution": "    n = len(nums)\n    if n == 0 or k > n:\n        return 0\n\n    max_sum = sum(nums[:k])\n    current_sum = max_sum\n\n    for i in range(k, n):\n        current_sum = current_sum - nums[i - k] + nums[i]\n        max_sum = max(max_sum, current_sum)\n\n    return max_sum", "test": "def check(candidate):\n    assert candidate([1, 2, 3, 4, 5], 2) == 9\n    assert candidate([2, 3, 5, 1, 8], 3) == 14\n    assert candidate([], 2) == 0\n    assert candidate([1, 2, 3, 4, 5], 6) == 0\n    assert candidate([4, 6, 7, 2], 2) == 13", "entry_point": "max_consecutive_sum"}
